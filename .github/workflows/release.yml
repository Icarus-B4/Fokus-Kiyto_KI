name: Release Build

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android Build Tools
        run: |
          yes | sdkmanager --install "build-tools;33.0.0"
          yes | sdkmanager --licenses
          echo "ANDROID_BUILD_TOOLS=$ANDROID_HOME/build-tools/33.0.0" >> $GITHUB_ENV
          echo "$ANDROID_HOME/build-tools/33.0.0" >> $GITHUB_PATH

      - name: Setup Gradle
        run: |
          mkdir -p gradle
          echo '[versions]' > gradle/libs.versions.toml
          echo 'firebase-crashlytics-buildtools = "2.9.9"' >> gradle/libs.versions.toml
          echo 'generativeai = "0.1.1"' >> gradle/libs.versions.toml
          echo 'cronet-embedded = "119.6045.31"' >> gradle/libs.versions.toml
          echo 'androidx-adapters = "1.0.0"' >> gradle/libs.versions.toml
          echo '' >> gradle/libs.versions.toml
          echo '[libraries]' >> gradle/libs.versions.toml
          echo 'firebase-crashlytics-buildtools = { module = "com.google.firebase:firebase-crashlytics-buildtools", version.ref = "firebase-crashlytics-buildtools" }' >> gradle/libs.versions.toml
          echo 'generativeai = { module = "com.google.ai.generativeai:generativeai", version.ref = "generativeai" }' >> gradle/libs.versions.toml
          echo 'cronet-embedded = { module = "org.chromium.net:cronet-embedded", version.ref = "cronet-embedded" }' >> gradle/libs.versions.toml
          echo 'androidx-adapters = { module = "androidx.test.espresso:espresso-idling-resource", version.ref = "androidx-adapters" }' >> gradle/libs.versions.toml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create Keystore
        run: |
          mkdir -p keystore
          keytool -genkey -v \
            -keystore keystore/release.keystore \
            -alias ${{ secrets.KEY_ALIAS }} \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass ${{ secrets.KEY_STORE_PASSWORD }} \
            -keypass ${{ secrets.KEY_PASSWORD }} \
            -dname "CN=KiytoApp, OU=Development, O=Icarus-B4, L=Unknown, S=Unknown, C=DE"

      - name: Build Release APK
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          OPENAI_API_KEY: "dummy-key"
        run: |
          export GRADLE_OPTS="-Xmx4g -XX:MaxMetaspaceSize=512m -Dkotlin.daemon.jvm.options=-Xmx2g"
          export JAVA_TOOL_OPTIONS="-Xmx4g"
          
          echo "Debug: Build environment"
          java -version
          echo "ANDROID_HOME=$ANDROID_HOME"
          echo "GRADLE_OPTS=$GRADLE_OPTS"
          echo "JAVA_TOOL_OPTIONS=$JAVA_TOOL_OPTIONS"
          
          echo "Debug: Clean build"
          ./gradlew clean --no-daemon --info
          
          echo "Debug: Assemble release"
          ./gradlew assembleRelease --no-daemon --info \
            --stacktrace \
            -Pandroid.useAndroidX=true \
            -Pandroid.enableJetifier=true || {
            
            echo "Debug: Build failed, checking logs"
            if [ -f app/build/outputs/logs/manifest-merger-release-report.txt ]; then
              echo "Manifest merger log:"
              cat app/build/outputs/logs/manifest-merger-release-report.txt
            fi
            
            echo "Debug: Gradle properties"
            find . -name "gradle.properties" -exec cat {} \;
            
            echo "Debug: Memory usage"
            free -h
            
            exit 1
          }

      - name: Sign APK
        env:
          BUILD_TOOLS_PATH: ${{ env.ANDROID_BUILD_TOOLS }}
          SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
        run: |
          set -e
          
          echo "Debug: Signing APK"
          $BUILD_TOOLS_PATH/zipalign -v -p 4 \
            app/build/outputs/apk/release/app-release-unsigned.apk \
            app/build/outputs/apk/release/app-release-aligned.apk
          
          $BUILD_TOOLS_PATH/apksigner sign --verbose \
            --ks keystore/release.keystore \
            --ks-key-alias "$SIGNING_KEY_ALIAS" \
            --ks-pass "pass:$SIGNING_STORE_PASSWORD" \
            --key-pass "pass:$SIGNING_KEY_PASSWORD" \
            --out app/build/outputs/apk/release/app-release.apk \
            app/build/outputs/apk/release/app-release-aligned.apk
          
          $BUILD_TOOLS_PATH/apksigner verify --verbose \
            app/build/outputs/apk/release/app-release.apk

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/app-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
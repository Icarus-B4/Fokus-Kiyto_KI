name: Android CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Set up Keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore/kiyto_release.keystore
      shell: bash
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build
    
  test:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Puppeteer dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgbm-dev libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
    
    - name: Install npm dependencies
      run: |
        npm init -y
        npm install puppeteer
    
    - name: Run Puppeteer tests
      run: |
        node -e "
        const puppeteer = require('puppeteer');
        
        (async () => {
          try {
            console.log('Starting Puppeteer tests...');
            const browser = await puppeteer.launch({
              headless: 'new',
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            
            const page = await browser.newPage();
            await page.goto('https://github.com/Icarus-B4/Fokus-Kiyto_KI');
            
            const title = await page.title();
            console.log('Page title:', title);
            
            if (!title.includes('Fokus-Kiyto_KI')) {
              throw new Error('Title verification failed');
            }
            
            console.log('Tests passed successfully!');
            await browser.close();
            process.exit(0);
          } catch (error) {
            console.error('Test failed:', error);
            process.exit(1);
          }
        })();
        "
    
  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Set up Keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > app/keystore/kiyto_release.keystore
      shell: bash
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build release APK
      run: ./gradlew assembleRelease
    
    - name: Sign APK
      run: |
        # Überprüfe, ob die APK existiert
        if [ -f app/build/outputs/apk/release/app-release.apk ]; then
          echo "APK gefunden: app/build/outputs/apk/release/app-release.apk"
        else
          echo "APK nicht gefunden in app/build/outputs/apk/release/"
          ls -la app/build/outputs/apk/release/
          exit 1
        fi
      shell: bash
    
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-release
        path: app/build/outputs/apk/release/app-release.apk
    
    - name: Get version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=1.9.0" >> $GITHUB_OUTPUT
        fi
      shell: bash
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: app/build/outputs/apk/release/app-release.apk
        body: |
          # Kiyto App Release v${{ steps.get_version.outputs.VERSION }}
          
          ## Neue Funktionen
          - Verbesserte Benutzeroberfläche
          - Fehlerbehebungen und Leistungsverbesserungen
          
          ## Installation
          Laden Sie die APK herunter und installieren Sie sie auf Ihrem Android-Gerät.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
